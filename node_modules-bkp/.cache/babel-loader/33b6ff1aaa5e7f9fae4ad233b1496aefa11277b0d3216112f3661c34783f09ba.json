{"ast":null,"code":"var _jsxFileName = \"/home/bipul/dashboard-dave/dynamodb-display/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Typography, Select, MenuItem, TextField, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Tooltip, Snackbar, IconButton, Dialog, DialogTitle, DialogContent, Button, Alert, Chip, LinearProgress, Switch, TablePagination } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport { json2csv } from \"json-2-csv\";\nimport '../src/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _tablesData$selectedT, _tablesData$selectedT2, _tablesData$selectedT4;\n  const [tablesData, setTablesData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [loadingPage, setLoadingPage] = useState(true); // New loading page state\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [searchText, setSearchText] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [openDetails, setOpenDetails] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [openAlertSnackbar, setOpenAlertSnackbar] = useState(false);\n  const [previousData, setPreviousData] = useState(null);\n\n  // Pagination states\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  useEffect(() => {\n    // Simulate loading time for demonstration, then fetch data\n    setTimeout(() => {\n      fetchData();\n      setLoadingPage(false); // Hide loading page once data is fetched\n    }, 1500); // Adjust the time as needed\n  }, []);\n  const fetchData = () => {\n    setLoading(true);\n    fetch(\"https://o2merk3yse.execute-api.us-east-1.amazonaws.com/dev/data\").then(res => res.json()).then(data => {\n      setLoading(false);\n      setOpenSnackbar(true);\n      const groupedData = groupAndGenerateColumns(data);\n      setTablesData(groupedData);\n      checkCriticalData(groupedData);\n      checkSignificantDataChange(groupedData);\n      setPreviousData(groupedData);\n    }).catch(err => {\n      setLoading(false);\n      console.error(\"Couldn't fetch data\", err);\n    });\n  };\n  const groupAndGenerateColumns = data => {\n    const groups = data.reduce((acc, item) => {\n      const tableName = item.table_name;\n      if (!acc[tableName]) {\n        acc[tableName] = {\n          data: [],\n          keys: new Set()\n        };\n      }\n      acc[tableName].data.push(item);\n      Object.keys(item).forEach(key => {\n        if (key !== \"table_name\") acc[tableName].keys.add(key);\n      });\n      return acc;\n    }, {});\n    Object.keys(groups).forEach(tableName => {\n      groups[tableName].columns = Array.from(groups[tableName].keys).map(key => ({\n        title: key.replace(/_/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()),\n        dataIndex: key,\n        key: key\n      }));\n    });\n    return groups;\n  };\n\n  // Check for critical data (e.g., \"Fail\" statuses)\n  const checkCriticalData = data => {\n    const hasFailures = Object.values(data).some(table => table.data.some(row => row.backup_status === \"Fail\"));\n    if (hasFailures) {\n      setAlertMessage(\"Critical Alert: Some records have 'Fail' status!\");\n      setOpenAlertSnackbar(true);\n    }\n  };\n\n  // Check for significant data change (example: if the number of rows changes)\n  const checkSignificantDataChange = newData => {\n    if (!previousData) return;\n    const previousCount = Object.values(previousData).reduce((acc, table) => acc + table.data.length, 0);\n    const newCount = Object.values(newData).reduce((acc, table) => acc + table.data.length, 0);\n    if (newCount !== previousCount) {\n      setAlertMessage(`Significant Update: Data count has changed from ${previousCount} to ${newCount}`);\n      setOpenAlertSnackbar(true);\n    }\n  };\n  const handleCloseSnackbar = () => setOpenSnackbar(false);\n  const handleCloseAlertSnackbar = () => setOpenAlertSnackbar(false);\n  const handleCloseDetails = () => setOpenDetails(false);\n\n  // Dark and light theme configurations\n  const lightTheme = createTheme({\n    palette: {\n      mode: \"light\",\n      primary: {\n        main: \"#036649\"\n      },\n      background: {\n        default: \"#ffffff\"\n      }\n    }\n  });\n  const darkTheme = createTheme({\n    palette: {\n      mode: \"dark\",\n      primary: {\n        main: \"#036649\"\n      },\n      background: {\n        default: \"#121212\"\n      },\n      text: {\n        primary: \"#ffffff\"\n      }\n    }\n  });\n  const handleDarkModeToggle = () => setDarkMode(!darkMode);\n\n  // Pagination handlers\n  const handleChangePage = (event, newPage) => setPage(newPage);\n  const handleChangeRowsPerPage = event => setRowsPerPage(parseInt(event.target.value, 10));\n\n  // Export filtered data to CSV\n  const exportToCSV = async () => {\n    const csvData = await json2csv(filteredData);\n    const blob = new Blob([csvData], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"filtered_data.csv\";\n    link.click();\n  };\n\n  // **Display Data in Table**\n  const selectedTableData = ((_tablesData$selectedT = tablesData[selectedTable]) === null || _tablesData$selectedT === void 0 ? void 0 : _tablesData$selectedT.data) || [];\n  const filteredData = selectedTableData.filter(item => Object.values(item).some(val => val && val.toString().toLowerCase().includes(searchText)));\n  const paginatedData = filteredData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n  // Render loading page if loadingPage is true\n  if (loadingPage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        backgroundColor: \"#036649\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          color: \"#ffffff\",\n          marginBottom: 20\n        },\n        children: \"Welcome to Dave Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"#ffffff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkMode ? darkTheme : lightTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20,\n        minHeight: \"100vh\",\n        backgroundColor: darkMode ? \"#121212\" : \"#ffffff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        style: {\n          color: darkMode ? \"#ffffff\" : \"#036649\",\n          marginBottom: 20\n        },\n        children: \"Dave - Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: 20,\n          backgroundColor: darkMode ? \"#424242\" : \"#f5f5f5\",\n          padding: \"10px\",\n          borderRadius: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: selectedTable,\n          onChange: e => setSelectedTable(e.target.value),\n          displayEmpty: true,\n          variant: \"outlined\",\n          style: {\n            width: 200,\n            backgroundColor: darkMode ? \"#333333\" : \"#ffffff\",\n            color: darkMode ? \"#ffffff\" : \"#036649\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select Module\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), Object.keys(tablesData).map(tableName => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: tableName,\n            children: tableName\n          }, tableName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Search Table\",\n          variant: \"outlined\",\n          onChange: e => setSearchText(e.target.value.toLowerCase()),\n          value: searchText,\n          style: {\n            width: 300,\n            backgroundColor: darkMode ? \"#333333\" : \"#ffffff\"\n          },\n          InputProps: {\n            style: {\n              color: darkMode ? \"#ffffff\" : \"#036649\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Refresh Data\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: fetchData,\n            style: {\n              color: \"#036649\"\n            },\n            children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Export to CSV\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: exportToCSV,\n            style: {\n              color: \"#036649\"\n            },\n            children: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          display: \"block\",\n          margin: \"20px auto\",\n          color: darkMode ? \"#bb86fc\" : \"#036649\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        style: {\n          borderRadius: \"8px\",\n          backgroundColor: darkMode ? \"#333333\" : \"#ffffff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                backgroundColor: darkMode ? \"#333333\" : \"#036649\"\n              },\n              children: (_tablesData$selectedT2 = tablesData[selectedTable]) === null || _tablesData$selectedT2 === void 0 ? void 0 : _tablesData$selectedT2.columns.map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: darkMode ? \"#ffffff\" : \"#ffffff\",\n                  fontWeight: \"bold\"\n                },\n                children: col.title\n              }, col.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: paginatedData.length > 0 ? paginatedData.map((row, rowIndex) => {\n              var _tablesData$selectedT3;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  backgroundColor: row.backup_status === \"Fail\" ? darkMode ? \"#432d2d\" : \"#fdecea\" : darkMode ? \"#2d4d32\" : \"#e7f5e6\",\n                  cursor: \"pointer\",\n                  transition: \"background-color 0.3s ease\"\n                },\n                onMouseEnter: e => e.currentTarget.style.backgroundColor = darkMode ? \"#3d3d3d\" : \"#f0f0f0\",\n                onMouseLeave: e => e.currentTarget.style.backgroundColor = row.backup_status === \"Fail\" ? darkMode ? \"#432d2d\" : \"#fdecea\" : darkMode ? \"#2d4d32\" : \"#e7f5e6\",\n                onClick: () => setSelectedRow(row),\n                children: (_tablesData$selectedT3 = tablesData[selectedTable]) === null || _tablesData$selectedT3 === void 0 ? void 0 : _tablesData$selectedT3.columns.map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: col.key === \"backup_status\" ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: row[col.key],\n                    color: row[col.key] === \"Fail\" ? \"error\" : \"success\",\n                    style: {\n                      fontWeight: \"bold\",\n                      color: \"#ffffff\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 29\n                  }, this) : row[col.key]\n                }, col.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: ((_tablesData$selectedT4 = tablesData[selectedTable]) === null || _tablesData$selectedT4 === void 0 ? void 0 : _tablesData$selectedT4.columns.length) || 1,\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: \"info\",\n                  children: \"No matching data found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: filteredData.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage,\n          style: {\n            color: darkMode ? \"#ffffff\" : \"#036649\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openSnackbar,\n        autoHideDuration: 3000,\n        onClose: handleCloseSnackbar,\n        message: \"Data refreshed successfully\",\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          color: \"inherit\",\n          onClick: handleCloseSnackbar,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openAlertSnackbar,\n        autoHideDuration: 6000,\n        onClose: handleCloseAlertSnackbar,\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseAlertSnackbar,\n          severity: \"warning\",\n          variant: \"filled\",\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDetails,\n        onClose: () => setOpenDetails(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Row Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: selectedRow && Object.entries(selectedRow).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key.replace(/_/g, \" \"), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), \" \", value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDetails(false),\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LbT6wvIznDZ0KWIYJHmJzX24BEw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Typography","Select","MenuItem","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Tooltip","Snackbar","IconButton","Dialog","DialogTitle","DialogContent","Button","Alert","Chip","LinearProgress","Switch","TablePagination","createTheme","ThemeProvider","CloseIcon","RefreshIcon","DownloadIcon","json2csv","jsxDEV","_jsxDEV","App","_s","_tablesData$selectedT","_tablesData$selectedT2","_tablesData$selectedT4","tablesData","setTablesData","loading","setLoading","loadingPage","setLoadingPage","selectedTable","setSelectedTable","searchText","setSearchText","statusFilter","setStatusFilter","openSnackbar","setOpenSnackbar","openDetails","setOpenDetails","selectedRow","setSelectedRow","darkMode","setDarkMode","alertMessage","setAlertMessage","openAlertSnackbar","setOpenAlertSnackbar","previousData","setPreviousData","page","setPage","rowsPerPage","setRowsPerPage","setTimeout","fetchData","fetch","then","res","json","data","groupedData","groupAndGenerateColumns","checkCriticalData","checkSignificantDataChange","catch","err","console","error","groups","reduce","acc","item","tableName","table_name","keys","Set","push","Object","forEach","key","add","columns","Array","from","map","title","replace","l","toUpperCase","dataIndex","hasFailures","values","some","table","row","backup_status","newData","previousCount","length","newCount","handleCloseSnackbar","handleCloseAlertSnackbar","handleCloseDetails","lightTheme","palette","mode","primary","main","background","default","darkTheme","text","handleDarkModeToggle","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","exportToCSV","csvData","filteredData","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","selectedTableData","filter","val","toString","toLowerCase","includes","paginatedData","slice","style","display","alignItems","justifyContent","height","backgroundColor","children","variant","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","theme","padding","minHeight","align","borderRadius","onChange","e","displayEmpty","width","disabled","placeholder","InputProps","onClick","margin","component","col","fontWeight","rowIndex","_tablesData$selectedT3","cursor","transition","onMouseEnter","currentTarget","onMouseLeave","label","colSpan","severity","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","autoHideDuration","onClose","message","action","size","fontSize","anchorOrigin","vertical","horizontal","dividers","entries","_c","$RefreshReg$"],"sources":["/home/bipul/dashboard-dave/dynamodb-display/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  Typography,\n  Select,\n  MenuItem,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Tooltip,\n  Snackbar,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  Alert,\n  Chip,\n  LinearProgress,\n  Switch,\n  TablePagination,\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport { json2csv } from \"json-2-csv\";\nimport '../src/App.css';\n\nconst App = () => {\n  const [tablesData, setTablesData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [loadingPage, setLoadingPage] = useState(true); // New loading page state\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [searchText, setSearchText] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [openDetails, setOpenDetails] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [openAlertSnackbar, setOpenAlertSnackbar] = useState(false);\n  const [previousData, setPreviousData] = useState(null);\n\n  // Pagination states\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  useEffect(() => {\n    // Simulate loading time for demonstration, then fetch data\n    setTimeout(() => {\n      fetchData();\n      setLoadingPage(false); // Hide loading page once data is fetched\n    }, 1500); // Adjust the time as needed\n  }, []);\n\n  const fetchData = () => {\n    setLoading(true);\n    fetch(\"https://o2merk3yse.execute-api.us-east-1.amazonaws.com/dev/data\")\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        setOpenSnackbar(true);\n        const groupedData = groupAndGenerateColumns(data);\n        setTablesData(groupedData);\n        checkCriticalData(groupedData);\n        checkSignificantDataChange(groupedData);\n        setPreviousData(groupedData);\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.error(\"Couldn't fetch data\", err);\n      });\n  };\n\n  const groupAndGenerateColumns = (data) => {\n    const groups = data.reduce((acc, item) => {\n      const tableName = item.table_name;\n      if (!acc[tableName]) {\n        acc[tableName] = { data: [], keys: new Set() };\n      }\n      acc[tableName].data.push(item);\n      Object.keys(item).forEach((key) => {\n        if (key !== \"table_name\") acc[tableName].keys.add(key);\n      });\n      return acc;\n    }, {});\n\n    Object.keys(groups).forEach((tableName) => {\n      groups[tableName].columns = Array.from(groups[tableName].keys).map(\n        (key) => ({\n          title: key.replace(/_/g, \" \").replace(/\\b\\w/g, (l) => l.toUpperCase()),\n          dataIndex: key,\n          key: key,\n        })\n      );\n    });\n\n    return groups;\n  };\n\n  // Check for critical data (e.g., \"Fail\" statuses)\n  const checkCriticalData = (data) => {\n    const hasFailures = Object.values(data).some(table => \n      table.data.some(row => row.backup_status === \"Fail\")\n    );\n    if (hasFailures) {\n      setAlertMessage(\"Critical Alert: Some records have 'Fail' status!\");\n      setOpenAlertSnackbar(true);\n    }\n  };\n\n  // Check for significant data change (example: if the number of rows changes)\n  const checkSignificantDataChange = (newData) => {\n    if (!previousData) return;\n\n    const previousCount = Object.values(previousData).reduce((acc, table) => acc + table.data.length, 0);\n    const newCount = Object.values(newData).reduce((acc, table) => acc + table.data.length, 0);\n\n    if (newCount !== previousCount) {\n      setAlertMessage(`Significant Update: Data count has changed from ${previousCount} to ${newCount}`);\n      setOpenAlertSnackbar(true);\n    }\n  };\n\n  const handleCloseSnackbar = () => setOpenSnackbar(false);\n  const handleCloseAlertSnackbar = () => setOpenAlertSnackbar(false);\n  const handleCloseDetails = () => setOpenDetails(false);\n\n  // Dark and light theme configurations\n  const lightTheme = createTheme({\n    palette: {\n      mode: \"light\",\n      primary: { main: \"#036649\" },\n      background: { default: \"#ffffff\" },\n    },\n  });\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: \"dark\",\n      primary: { main: \"#036649\" },\n      background: { default: \"#121212\" },\n      text: { primary: \"#ffffff\" },\n    },\n  });\n\n  const handleDarkModeToggle = () => setDarkMode(!darkMode);\n\n  // Pagination handlers\n  const handleChangePage = (event, newPage) => setPage(newPage);\n  const handleChangeRowsPerPage = (event) => setRowsPerPage(parseInt(event.target.value, 10));\n\n  // Export filtered data to CSV\n  const exportToCSV = async () => {\n    const csvData = await json2csv(filteredData);\n    const blob = new Blob([csvData], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"filtered_data.csv\";\n    link.click();\n  };\n\n  // **Display Data in Table**\n  const selectedTableData = tablesData[selectedTable]?.data || [];\n  const filteredData = selectedTableData.filter((item) =>\n    Object.values(item).some((val) =>\n      val && val.toString().toLowerCase().includes(searchText)\n    )\n  );\n  const paginatedData = filteredData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n  // Render loading page if loadingPage is true\n  if (loadingPage) {\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", height: \"100vh\", backgroundColor: \"#036649\" }}>\n        <Typography variant=\"h4\" style={{ color: \"#ffffff\", marginBottom: 20 }}>\n          Welcome to Dave Dashboard\n        </Typography>\n        <CircularProgress style={{ color: \"#ffffff\" }} />\n      </div>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <div style={{ padding: 20, minHeight: \"100vh\", backgroundColor: darkMode ? \"#121212\" : \"#ffffff\" }}>\n        <Typography variant=\"h4\" align=\"center\" style={{ color: darkMode ? \"#ffffff\" : \"#036649\", marginBottom: 20 }}>\n          Dave - Dashboard\n        </Typography>\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            marginBottom: 20,\n            backgroundColor: darkMode ? \"#424242\" : \"#f5f5f5\",\n            padding: \"10px\",\n            borderRadius: \"8px\",\n          }}\n        >\n          <Select\n            value={selectedTable}\n            onChange={(e) => setSelectedTable(e.target.value)}\n            displayEmpty\n            variant=\"outlined\"\n            style={{\n              width: 200,\n              backgroundColor: darkMode ? \"#333333\" : \"#ffffff\",\n              color: darkMode ? \"#ffffff\" : \"#036649\",\n            }}\n          >\n            <MenuItem value=\"\" disabled>\n              Select Module\n            </MenuItem>\n            {Object.keys(tablesData).map((tableName) => (\n              <MenuItem key={tableName} value={tableName}>\n                {tableName}\n              </MenuItem>\n            ))}\n          </Select>\n\n          <TextField\n            placeholder=\"Search Table\"\n            variant=\"outlined\"\n            onChange={(e) => setSearchText(e.target.value.toLowerCase())}\n            value={searchText}\n            style={{\n              width: 300,\n              backgroundColor: darkMode ? \"#333333\" : \"#ffffff\",\n            }}\n            InputProps={{\n              style: { color: darkMode ? \"#ffffff\" : \"#036649\" },\n            }}\n          />\n\n          <Tooltip title=\"Refresh Data\">\n            <IconButton onClick={fetchData} style={{ color: \"#036649\" }}>\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Export to CSV\">\n            <IconButton onClick={exportToCSV} style={{ color: \"#036649\" }}>\n              <DownloadIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n\n        {loading ? (\n          <CircularProgress style={{ display: \"block\", margin: \"20px auto\", color: darkMode ? \"#bb86fc\" : \"#036649\" }} />\n        ) : (\n          <TableContainer component={Paper} style={{ borderRadius: \"8px\", backgroundColor: darkMode ? \"#333333\" : \"#ffffff\" }}>\n            <Table>\n              <TableHead>\n                <TableRow style={{ backgroundColor: darkMode ? \"#333333\" : \"#036649\" }}>\n                  {tablesData[selectedTable]?.columns.map((col) => (\n                    <TableCell key={col.key} style={{ color: darkMode ? \"#ffffff\" : \"#ffffff\", fontWeight: \"bold\" }}>\n                      {col.title}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {paginatedData.length > 0 ? (\n                  paginatedData.map((row, rowIndex) => (\n                    <TableRow\n                      key={rowIndex}\n                      style={{\n                        backgroundColor:\n                          row.backup_status === \"Fail\" ? (darkMode ? \"#432d2d\" : \"#fdecea\") : (darkMode ? \"#2d4d32\" : \"#e7f5e6\"),\n                        cursor: \"pointer\",\n                        transition: \"background-color 0.3s ease\",\n                      }}\n                      onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = darkMode ? \"#3d3d3d\" : \"#f0f0f0\")}\n                      onMouseLeave={(e) =>\n                        (e.currentTarget.style.backgroundColor =\n                          row.backup_status === \"Fail\" ? (darkMode ? \"#432d2d\" : \"#fdecea\") : (darkMode ? \"#2d4d32\" : \"#e7f5e6\"))\n                      }\n                      onClick={() => setSelectedRow(row)}\n                    >\n                      {tablesData[selectedTable]?.columns.map((col) => (\n                        <TableCell key={col.key}>\n                          {col.key === \"backup_status\" ? (\n                            <Chip\n                              label={row[col.key]}\n                              color={row[col.key] === \"Fail\" ? \"error\" : \"success\"}\n                              style={{ fontWeight: \"bold\", color: \"#ffffff\" }}\n                            />\n                          ) : (\n                            row[col.key]\n                          )}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  ))\n                ) : (\n                  <TableRow>\n                    <TableCell colSpan={tablesData[selectedTable]?.columns.length || 1} align=\"center\">\n                      <Alert severity=\"info\">No matching data found</Alert>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n            {/* Pagination */}\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={filteredData.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              style={{ color: darkMode ? \"#ffffff\" : \"#036649\" }}\n            />\n          </TableContainer>\n        )}\n\n        {/* Snackbar for data refresh notification */}\n        <Snackbar\n          open={openSnackbar}\n          autoHideDuration={3000}\n          onClose={handleCloseSnackbar}\n          message=\"Data refreshed successfully\"\n          action={\n            <IconButton size=\"small\" color=\"inherit\" onClick={handleCloseSnackbar}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          }\n        />\n\n        {/* Snackbar for critical and significant change alerts */}\n        <Snackbar\n          open={openAlertSnackbar}\n          autoHideDuration={6000}\n          onClose={handleCloseAlertSnackbar}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        >\n          <Alert onClose={handleCloseAlertSnackbar} severity=\"warning\" variant=\"filled\">\n            {alertMessage}\n          </Alert>\n        </Snackbar>\n\n        <Dialog open={openDetails} onClose={() => setOpenDetails(false)}>\n          <DialogTitle>Row Details</DialogTitle>\n          <DialogContent dividers>\n            {selectedRow &&\n              Object.entries(selectedRow).map(([key, value]) => (\n                <Typography key={key}>\n                  <strong>{key.replace(/_/g, \" \")}:</strong> {value}\n                </Typography>\n              ))}\n          </DialogContent>\n          <Button onClick={() => setOpenDetails(false)} color=\"primary\">\n            Close\n          </Button>\n        </Dialog>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}