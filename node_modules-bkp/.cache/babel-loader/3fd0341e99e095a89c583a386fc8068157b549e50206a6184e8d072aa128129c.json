{"ast":null,"code":"var _jsxFileName = \"/home/bipul/dashboard-dave/dynamodb-display/src/App.js\",\n  _s = $RefreshSig$();\nimport { message, Skeleton, Table } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [statuses, setStatuses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://ayr7fudi20.execute-api.us-east-1.amazonaws.com/Test-stage/data\").then(res => res.json()).then(res => {\n      setLoading(false);\n      setStatuses(res);\n    }).catch(err => {\n      setLoading(false);\n      message.error(\"Couldn't fetch status\");\n    });\n  }, []);\n  const dataSource = statuses.map((item, index) => ({\n    key: String(index + 1),\n    vmname: item.vmname,\n    vm_id: item.vm_id,\n    backup_status: item.backup_status,\n    backup_date: item.backup_date\n  }));\n\n  // Defining columns\n  const columns = [{\n    title: 'VM Name',\n    dataIndex: 'vmname',\n    key: 'vmname'\n  }, {\n    title: 'VM ID',\n    dataIndex: 'vm_id',\n    key: 'vm_id'\n  }, {\n    title: 'Backup Status',\n    dataIndex: 'backup_status',\n    key: 'backup_status'\n  }, {\n    title: 'Backup Date',\n    dataIndex: 'backup_date',\n    key: 'backup_date'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: 50,\n        backgroundColor: '#004D40',\n        color: '#fff',\n        display: 'flex',\n        alignItems: 'center',\n        padding: 10,\n        fontSize: 20,\n        fontWeight: '600',\n        justifyContent: 'center'\n      },\n      children: \"Dave - Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1j3n0tSj9WePQuGLkxdJfK06Jtg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["message","Skeleton","Table","useEffect","useState","jsxDEV","_jsxDEV","App","_s","statuses","setStatuses","loading","setLoading","fetch","then","res","json","catch","err","error","dataSource","map","item","index","key","String","vmname","vm_id","backup_status","backup_date","columns","title","dataIndex","children","style","width","height","backgroundColor","color","display","alignItems","padding","fontSize","fontWeight","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bipul/dashboard-dave/dynamodb-display/src/App.js"],"sourcesContent":["import { message, Skeleton, Table } from \"antd\";\nimport { useEffect, useState } from \"react\";\n\nconst App = () => {\n\n  const [statuses, setStatuses] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    fetch(\"https://ayr7fudi20.execute-api.us-east-1.amazonaws.com/Test-stage/data\").then(res => res.json()).then(res => {\n      setLoading(false)\n      setStatuses(res)\n    }).catch(err=>{\n      setLoading(false)\n      message.error(\"Couldn't fetch status\")\n    })\n  }, [])\n\n\n  const dataSource = statuses.map((item, index) => ({\n    key: String(index + 1),\n    vmname: item.vmname,\n    vm_id: item.vm_id,\n    backup_status: item.backup_status,\n    backup_date: item.backup_date\n  }));\n\n  // Defining columns\n  const columns = [\n    {\n      title: 'VM Name',\n      dataIndex: 'vmname',\n      key: 'vmname',\n    },\n    {\n      title: 'VM ID',\n      dataIndex: 'vm_id',\n      key: 'vm_id',\n    },\n    {\n      title: 'Backup Status',\n      dataIndex: 'backup_status',\n      key: 'backup_status',\n    },\n    {\n      title: 'Backup Date',\n      dataIndex: 'backup_date',\n      key: 'backup_date',\n    }\n  ];\n\n\n  return (\n    <div>\n      <div style={{ width: '100%', height: 50, backgroundColor: '#004D40', color: '#fff', display: 'flex', alignItems: 'center', padding: 10, fontSize: 20, fontWeight: '600', justifyContent: 'center' }}>\n        Dave - Dashboard\n      </div>\n\n      {loading ? <Skeleton /> : <Table dataSource={dataSource} columns={columns} />}\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}