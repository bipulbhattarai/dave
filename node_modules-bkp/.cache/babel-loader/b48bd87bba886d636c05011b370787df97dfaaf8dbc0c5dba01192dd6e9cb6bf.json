{"ast":null,"code":"var _jsxFileName = \"/home/bipul/dashboard-dave/dynamodb-display/src/App.js\",\n  _s = $RefreshSig$();\nimport { message, Skeleton, Table, Select, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst App = () => {\n  _s();\n  const [tablesData, setTablesData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedTable, setSelectedTable] = useState(null); // Set to null for initial state\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://ayr7fudi20.execute-api.us-east-1.amazonaws.com/Test-stage/data\").then(res => res.json()).then(data => {\n      setLoading(false);\n      const groupedData = groupAndGenerateColumns(data);\n      setTablesData(groupedData);\n      // Do not automatically select the first table\n    }).catch(err => {\n      setLoading(false);\n      message.error(\"Couldn't fetch data\");\n    });\n  }, []);\n  const groupAndGenerateColumns = data => {\n    const groups = data.reduce((acc, item) => {\n      const tableName = item.table_name;\n      if (!acc[tableName]) {\n        acc[tableName] = {\n          data: [],\n          keys: new Set()\n        };\n      }\n      acc[tableName].data.push(item);\n      Object.keys(item).forEach(key => {\n        if (key !== 'table_name') acc[tableName].keys.add(key);\n      });\n      return acc;\n    }, {});\n    Object.keys(groups).forEach(tableName => {\n      groups[tableName].columns = Array.from(groups[tableName].keys).map(key => ({\n        title: key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n        dataIndex: key,\n        key: key,\n        render: (text, record) => {\n          if (key === \"backup_status\") {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: text === \"Fail\" ? 'red' : 'green'\n              },\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 20\n            }, this);\n          }\n          return text;\n        }\n      }));\n    });\n    return groups;\n  };\n  const handleTableChange = value => {\n    setSelectedTable(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 3,\n      style: {\n        textAlign: 'center',\n        backgroundColor: '#004D40',\n        color: '#fff',\n        height: 50,\n        display: 'flex',\n        alignItems: 'center',\n        padding: 10,\n        fontSize: 20,\n        fontWeight: '600',\n        justifyContent: 'center'\n      },\n      children: \"Dave - Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedTable,\n      style: {\n        width: 200,\n        marginBottom: 20\n      },\n      onChange: handleTableChange,\n      placeholder: \"Select Module\" // Placeholder shows when no value is selected\n      ,\n      children: Object.keys(tablesData).map(tableName => /*#__PURE__*/_jsxDEV(Option, {\n        value: tableName,\n        children: tableName\n      }, tableName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 18\n    }, this) : selectedTable && tablesData[selectedTable] ? /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: tablesData[selectedTable].data,\n      columns: tablesData[selectedTable].columns,\n      rowClassName: record => record.backup_status === \"Fail\" ? 'backup-fail' : 'backup-success'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Typography.Text, {\n      children: \"No Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ik4FhwEifjCI27vIzPLzt5XTr8w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["message","Skeleton","Table","Select","Typography","useEffect","useState","jsxDEV","_jsxDEV","Option","App","_s","tablesData","setTablesData","loading","setLoading","selectedTable","setSelectedTable","fetch","then","res","json","data","groupedData","groupAndGenerateColumns","catch","err","error","groups","reduce","acc","item","tableName","table_name","keys","Set","push","Object","forEach","key","add","columns","Array","from","map","title","replace","l","toUpperCase","dataIndex","render","text","record","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","handleTableChange","value","Title","level","textAlign","backgroundColor","height","display","alignItems","padding","fontSize","fontWeight","justifyContent","width","marginBottom","onChange","placeholder","dataSource","rowClassName","backup_status","Text","_c","$RefreshReg$"],"sources":["/home/bipul/dashboard-dave/dynamodb-display/src/App.js"],"sourcesContent":["import { message, Skeleton, Table, Select, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nconst { Option } = Select;\n\nconst App = () => {\n  const [tablesData, setTablesData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedTable, setSelectedTable] = useState(null);  // Set to null for initial state\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://ayr7fudi20.execute-api.us-east-1.amazonaws.com/Test-stage/data\")\n      .then(res => res.json())\n      .then(data => {\n        setLoading(false);\n        const groupedData = groupAndGenerateColumns(data);\n        setTablesData(groupedData);\n        // Do not automatically select the first table\n      })\n      .catch(err => {\n        setLoading(false);\n        message.error(\"Couldn't fetch data\");\n      });\n  }, []);\n\n  const groupAndGenerateColumns = (data) => {\n    const groups = data.reduce((acc, item) => {\n      const tableName = item.table_name;\n      if (!acc[tableName]) {\n        acc[tableName] = { data: [], keys: new Set() };\n      }\n      acc[tableName].data.push(item);\n      Object.keys(item).forEach(key => {\n        if (key !== 'table_name') acc[tableName].keys.add(key);\n      });\n      return acc;\n    }, {});\n\n    Object.keys(groups).forEach(tableName => {\n      groups[tableName].columns = Array.from(groups[tableName].keys).map(key => ({\n        title: key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n        dataIndex: key,\n        key: key,\n        render: (text, record) => {\n          if (key === \"backup_status\") {\n            return <span style={{ color: text === \"Fail\" ? 'red' : 'green' }}>{text}</span>;\n          }\n          return text;\n        }\n      }));\n    });\n\n    return groups;\n  };\n\n  const handleTableChange = value => {\n    setSelectedTable(value);\n  };\n\n  return (\n    <div>\n      <Typography.Title level={3} style={{ textAlign: 'center', backgroundColor: '#004D40', color: '#fff', height: 50, display: 'flex', alignItems: 'center', padding: 10, fontSize: 20, fontWeight: '600', justifyContent: 'center' }}>Dave - Dashboard</Typography.Title>\n      <Select\n        value={selectedTable}\n        style={{ width: 200, marginBottom: 20 }}\n        onChange={handleTableChange}\n        placeholder=\"Select Module\" // Placeholder shows when no value is selected\n      >\n        {Object.keys(tablesData).map(tableName => (\n          <Option key={tableName} value={tableName}>{tableName}</Option>\n        ))}\n      </Select>\n\n      {loading ? <Skeleton /> : (\n        selectedTable && tablesData[selectedTable] ? (\n          <Table \n            dataSource={tablesData[selectedTable].data} \n            columns={tablesData[selectedTable].columns} \n            rowClassName={(record) => record.backup_status === \"Fail\" ? 'backup-fail' : 'backup-success'}\n          />\n        ) : <Typography.Text>No Data</Typography.Text>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}