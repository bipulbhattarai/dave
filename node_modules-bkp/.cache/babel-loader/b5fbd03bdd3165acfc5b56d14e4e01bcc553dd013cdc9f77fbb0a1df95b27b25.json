{"ast":null,"code":"var _jsxFileName = \"/home/bipul/dashboard-dave/dynamodb-display/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Typography, Select, MenuItem, TextField, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Tooltip, Snackbar, IconButton, Dialog, DialogTitle, DialogContent, Button, Alert, Chip, LinearProgress, Switch } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport '../src/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _tablesData$selectedT, _tablesData$selectedT2, _tablesData$selectedT4;\n  const [tablesData, setTablesData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [searchText, setSearchText] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [openDetails, setOpenDetails] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n\n  // New states for notifications\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [openAlertSnackbar, setOpenAlertSnackbar] = useState(false);\n  const [previousData, setPreviousData] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    setLoading(true);\n    fetch(\"https://o2merk3yse.execute-api.us-east-1.amazonaws.com/dev/data\").then(res => res.json()).then(data => {\n      setLoading(false);\n      setOpenSnackbar(true);\n      console.log(\"Fetched Data:\", data); // Debugging: Log fetched data\n\n      const groupedData = groupAndGenerateColumns(data);\n      console.log(\"Grouped Data:\", groupedData); // Debugging: Log grouped data\n\n      setTablesData(groupedData);\n      checkCriticalData(groupedData);\n      checkSignificantDataChange(groupedData);\n      setPreviousData(groupedData);\n    }).catch(err => {\n      setLoading(false);\n      console.error(\"Couldn't fetch data\", err);\n    });\n  };\n  const groupAndGenerateColumns = data => {\n    const groups = data.reduce((acc, item) => {\n      const tableName = item.table_name;\n      if (!acc[tableName]) {\n        acc[tableName] = {\n          data: [],\n          keys: new Set()\n        };\n      }\n      acc[tableName].data.push(item);\n      Object.keys(item).forEach(key => {\n        if (key !== \"table_name\") acc[tableName].keys.add(key);\n      });\n      return acc;\n    }, {});\n    Object.keys(groups).forEach(tableName => {\n      groups[tableName].columns = Array.from(groups[tableName].keys).map(key => ({\n        title: key.replace(/_/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase()),\n        dataIndex: key,\n        key: key\n      }));\n    });\n    return groups;\n  };\n\n  // Check for critical data (e.g., \"Fail\" statuses)\n  const checkCriticalData = data => {\n    const hasFailures = Object.values(data).some(table => table.data.some(row => row.backup_status === \"Fail\"));\n    if (hasFailures) {\n      setAlertMessage(\"Critical Alert: Some records have 'Fail' status!\");\n      setOpenAlertSnackbar(true);\n    }\n  };\n\n  // Check for significant data change (example: if the number of rows changes)\n  const checkSignificantDataChange = newData => {\n    if (!previousData) return;\n    const previousCount = Object.values(previousData).reduce((acc, table) => acc + table.data.length, 0);\n    const newCount = Object.values(newData).reduce((acc, table) => acc + table.data.length, 0);\n    if (newCount !== previousCount) {\n      setAlertMessage(`Significant Update: Data count has changed from ${previousCount} to ${newCount}`);\n      setOpenAlertSnackbar(true);\n    }\n  };\n  const handleCloseSnackbar = () => setOpenSnackbar(false);\n  const handleCloseAlertSnackbar = () => setOpenAlertSnackbar(false);\n  const handleCloseDetails = () => setOpenDetails(false);\n\n  // Dark and light theme configurations\n  const lightTheme = createTheme({\n    palette: {\n      mode: \"light\",\n      primary: {\n        main: \"#036649\"\n      },\n      background: {\n        default: \"#ffffff\"\n      }\n    }\n  });\n  const darkTheme = createTheme({\n    palette: {\n      mode: \"dark\",\n      primary: {\n        main: \"#bb86fc\"\n      },\n      background: {\n        default: \"#121212\"\n      },\n      text: {\n        primary: \"#ffffff\"\n      }\n    },\n    components: {\n      MuiOutlinedInput: {\n        styleOverrides: {\n          root: {\n            \"& .MuiOutlinedInput-notchedOutline\": {\n              borderColor: \"#036649\"\n            },\n            \"&:hover .MuiOutlinedInput-notchedOutline\": {\n              borderColor: \"#036649\"\n            },\n            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n              borderColor: \"#036649\"\n            }\n          },\n          input: {\n            color: \"#ffffff\"\n          }\n        }\n      },\n      MuiSelect: {\n        styleOverrides: {\n          icon: {\n            color: \"#036649\"\n          }\n        }\n      }\n    }\n  });\n  const handleDarkModeToggle = () => setDarkMode(!darkMode);\n\n  // **Display Data in Table**\n  const selectedTableData = ((_tablesData$selectedT = tablesData[selectedTable]) === null || _tablesData$selectedT === void 0 ? void 0 : _tablesData$selectedT.data) || [];\n  const filteredData = selectedTableData.filter(item => Object.values(item).some(val => val && val.toString().toLowerCase().includes(searchText)));\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkMode ? darkTheme : lightTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20,\n        minHeight: \"100vh\",\n        backgroundColor: darkMode ? \"#121212\" : \"#ffffff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          style: {\n            color: darkMode ? \"#ffffff\" : \"#036649\"\n          },\n          children: \"Dave - Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            style: {\n              color: darkMode ? \"#ffffff\" : \"#036649\",\n              marginRight: 8\n            },\n            children: \"Dark Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: darkMode,\n            onChange: handleDarkModeToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: 20,\n          backgroundColor: darkMode ? \"#424242\" : \"#f5f5f5\",\n          padding: \"10px\",\n          borderRadius: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: selectedTable,\n          onChange: e => setSelectedTable(e.target.value),\n          displayEmpty: true,\n          variant: \"outlined\",\n          style: {\n            width: 200,\n            backgroundColor: darkMode ? \"#333333\" : \"#ffffff\",\n            color: darkMode ? \"#ffffff\" : \"#036649\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select Module\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), Object.keys(tablesData).map(tableName => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: tableName,\n            children: tableName\n          }, tableName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Search Table\",\n          variant: \"outlined\",\n          onChange: e => setSearchText(e.target.value.toLowerCase()),\n          value: searchText,\n          style: {\n            width: 300,\n            backgroundColor: darkMode ? \"#333333\" : \"#ffffff\"\n          },\n          InputProps: {\n            style: {\n              color: darkMode ? \"#ffffff\" : \"#036649\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Refresh Data\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: fetchData,\n            style: {\n              color: darkMode ? \"#bb86fc\" : \"#036649\"\n            },\n            children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          display: \"block\",\n          margin: \"20px auto\",\n          color: darkMode ? \"#bb86fc\" : \"#036649\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        style: {\n          borderRadius: \"8px\",\n          backgroundColor: darkMode ? \"#333333\" : \"#ffffff\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                backgroundColor: darkMode ? \"#333333\" : \"#036649\"\n              },\n              children: (_tablesData$selectedT2 = tablesData[selectedTable]) === null || _tablesData$selectedT2 === void 0 ? void 0 : _tablesData$selectedT2.columns.map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: darkMode ? \"#ffffff\" : \"#ffffff\",\n                  fontWeight: \"bold\"\n                },\n                children: col.title\n              }, col.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: filteredData.length > 0 ? filteredData.map((row, rowIndex) => {\n              var _tablesData$selectedT3;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  backgroundColor: row.backup_status === \"Fail\" ? darkMode ? \"#432d2d\" : \"#fdecea\" : darkMode ? \"#2d4d32\" : \"#e7f5e6\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => setSelectedRow(row),\n                children: (_tablesData$selectedT3 = tablesData[selectedTable]) === null || _tablesData$selectedT3 === void 0 ? void 0 : _tablesData$selectedT3.columns.map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: col.key === \"backup_status\" ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: row[col.key],\n                    color: row[col.key] === \"Fail\" ? \"error\" : \"success\",\n                    style: {\n                      fontWeight: \"bold\",\n                      color: \"#ffffff\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 29\n                  }, this) : row[col.key]\n                }, col.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 25\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: ((_tablesData$selectedT4 = tablesData[selectedTable]) === null || _tablesData$selectedT4 === void 0 ? void 0 : _tablesData$selectedT4.columns.length) || 1,\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: \"info\",\n                  children: \"No matching data found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openSnackbar,\n        autoHideDuration: 3000,\n        onClose: handleCloseSnackbar,\n        message: \"Data refreshed successfully\",\n        action: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          color: \"inherit\",\n          onClick: handleCloseSnackbar,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openAlertSnackbar,\n        autoHideDuration: 6000,\n        onClose: handleCloseAlertSnackbar,\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseAlertSnackbar,\n          severity: \"warning\",\n          variant: \"filled\",\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDetails,\n        onClose: () => setOpenDetails(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Row Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: selectedRow && Object.entries(selectedRow).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key.replace(/_/g, \" \"), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), \" \", value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDetails(false),\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+YRhpGewNPYHgBR6B7alnITEqlo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Typography","Select","MenuItem","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Tooltip","Snackbar","IconButton","Dialog","DialogTitle","DialogContent","Button","Alert","Chip","LinearProgress","Switch","createTheme","ThemeProvider","CloseIcon","RefreshIcon","jsxDEV","_jsxDEV","App","_s","_tablesData$selectedT","_tablesData$selectedT2","_tablesData$selectedT4","tablesData","setTablesData","loading","setLoading","selectedTable","setSelectedTable","searchText","setSearchText","statusFilter","setStatusFilter","openSnackbar","setOpenSnackbar","openDetails","setOpenDetails","selectedRow","setSelectedRow","darkMode","setDarkMode","alertMessage","setAlertMessage","openAlertSnackbar","setOpenAlertSnackbar","previousData","setPreviousData","fetchData","fetch","then","res","json","data","console","log","groupedData","groupAndGenerateColumns","checkCriticalData","checkSignificantDataChange","catch","err","error","groups","reduce","acc","item","tableName","table_name","keys","Set","push","Object","forEach","key","add","columns","Array","from","map","title","replace","l","toUpperCase","dataIndex","hasFailures","values","some","table","row","backup_status","newData","previousCount","length","newCount","handleCloseSnackbar","handleCloseAlertSnackbar","handleCloseDetails","lightTheme","palette","mode","primary","main","background","default","darkTheme","text","components","MuiOutlinedInput","styleOverrides","root","borderColor","input","color","MuiSelect","icon","handleDarkModeToggle","selectedTableData","filteredData","filter","val","toString","toLowerCase","includes","theme","children","style","padding","minHeight","backgroundColor","display","justifyContent","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","marginRight","checked","onChange","marginBottom","borderRadius","value","e","target","displayEmpty","width","disabled","placeholder","InputProps","onClick","margin","component","col","fontWeight","rowIndex","_tablesData$selectedT3","cursor","label","colSpan","align","severity","open","autoHideDuration","onClose","message","action","size","fontSize","anchorOrigin","vertical","horizontal","dividers","entries","_c","$RefreshReg$"],"sources":["/home/bipul/dashboard-dave/dynamodb-display/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  Typography,\n  Select,\n  MenuItem,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Tooltip,\n  Snackbar,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  Alert,\n  Chip,\n  LinearProgress,\n  Switch\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport '../src/App.css';\n\nconst App = () => {\n  const [tablesData, setTablesData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedTable, setSelectedTable] = useState(\"\");\n  const [searchText, setSearchText] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [openDetails, setOpenDetails] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n\n  // New states for notifications\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [openAlertSnackbar, setOpenAlertSnackbar] = useState(false);\n  const [previousData, setPreviousData] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    setLoading(true);\n    fetch(\"https://o2merk3yse.execute-api.us-east-1.amazonaws.com/dev/data\")\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        setOpenSnackbar(true);\n\n        console.log(\"Fetched Data:\", data); // Debugging: Log fetched data\n\n        const groupedData = groupAndGenerateColumns(data);\n        console.log(\"Grouped Data:\", groupedData); // Debugging: Log grouped data\n\n        setTablesData(groupedData);\n        checkCriticalData(groupedData);\n        checkSignificantDataChange(groupedData);\n        setPreviousData(groupedData);\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.error(\"Couldn't fetch data\", err);\n      });\n  };\n\n  const groupAndGenerateColumns = (data) => {\n    const groups = data.reduce((acc, item) => {\n      const tableName = item.table_name;\n      if (!acc[tableName]) {\n        acc[tableName] = { data: [], keys: new Set() };\n      }\n      acc[tableName].data.push(item);\n      Object.keys(item).forEach((key) => {\n        if (key !== \"table_name\") acc[tableName].keys.add(key);\n      });\n      return acc;\n    }, {});\n\n    Object.keys(groups).forEach((tableName) => {\n      groups[tableName].columns = Array.from(groups[tableName].keys).map(\n        (key) => ({\n          title: key.replace(/_/g, \" \").replace(/\\b\\w/g, (l) => l.toUpperCase()),\n          dataIndex: key,\n          key: key,\n        })\n      );\n    });\n\n    return groups;\n  };\n\n  // Check for critical data (e.g., \"Fail\" statuses)\n  const checkCriticalData = (data) => {\n    const hasFailures = Object.values(data).some(table => \n      table.data.some(row => row.backup_status === \"Fail\")\n    );\n    if (hasFailures) {\n      setAlertMessage(\"Critical Alert: Some records have 'Fail' status!\");\n      setOpenAlertSnackbar(true);\n    }\n  };\n\n  // Check for significant data change (example: if the number of rows changes)\n  const checkSignificantDataChange = (newData) => {\n    if (!previousData) return;\n\n    const previousCount = Object.values(previousData).reduce((acc, table) => acc + table.data.length, 0);\n    const newCount = Object.values(newData).reduce((acc, table) => acc + table.data.length, 0);\n\n    if (newCount !== previousCount) {\n      setAlertMessage(`Significant Update: Data count has changed from ${previousCount} to ${newCount}`);\n      setOpenAlertSnackbar(true);\n    }\n  };\n\n  const handleCloseSnackbar = () => setOpenSnackbar(false);\n  const handleCloseAlertSnackbar = () => setOpenAlertSnackbar(false);\n  const handleCloseDetails = () => setOpenDetails(false);\n\n  // Dark and light theme configurations\n  const lightTheme = createTheme({\n    palette: {\n      mode: \"light\",\n      primary: { main: \"#036649\" },\n      background: { default: \"#ffffff\" },\n    },\n  });\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: \"dark\",\n      primary: { main: \"#bb86fc\" },\n      background: { default: \"#121212\" },\n      text: { primary: \"#ffffff\" },\n    },\n    components: {\n      MuiOutlinedInput: {\n        styleOverrides: {\n          root: {\n            \"& .MuiOutlinedInput-notchedOutline\": {\n              borderColor: \"#036649\",\n            },\n            \"&:hover .MuiOutlinedInput-notchedOutline\": {\n              borderColor: \"#036649\",\n            },\n            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n              borderColor: \"#036649\",\n            },\n          },\n          input: {\n            color: \"#ffffff\",\n          },\n        },\n      },\n      MuiSelect: {\n        styleOverrides: {\n          icon: {\n            color: \"#036649\",\n          },\n        },\n      },\n    },\n  });\n\n  const handleDarkModeToggle = () => setDarkMode(!darkMode);\n\n  // **Display Data in Table**\n  const selectedTableData = tablesData[selectedTable]?.data || [];\n  const filteredData = selectedTableData.filter((item) =>\n    Object.values(item).some((val) =>\n      val && val.toString().toLowerCase().includes(searchText)\n    )\n  );\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <div style={{ padding: 20, minHeight: \"100vh\", backgroundColor: darkMode ? \"#121212\" : \"#ffffff\" }}>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n          <Typography variant=\"h4\" style={{ color: darkMode ? \"#ffffff\" : \"#036649\" }}>\n            Dave - Dashboard\n          </Typography>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <Typography variant=\"body1\" style={{ color: darkMode ? \"#ffffff\" : \"#036649\", marginRight: 8 }}>\n              Dark Mode\n            </Typography>\n            <Switch checked={darkMode} onChange={handleDarkModeToggle} />\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            marginBottom: 20,\n            backgroundColor: darkMode ? \"#424242\" : \"#f5f5f5\",\n            padding: \"10px\",\n            borderRadius: \"8px\",\n          }}\n        >\n          <Select\n            value={selectedTable}\n            onChange={(e) => setSelectedTable(e.target.value)}\n            displayEmpty\n            variant=\"outlined\"\n            style={{\n              width: 200,\n              backgroundColor: darkMode ? \"#333333\" : \"#ffffff\",\n              color: darkMode ? \"#ffffff\" : \"#036649\",\n            }}\n          >\n            <MenuItem value=\"\" disabled>\n              Select Module\n            </MenuItem>\n            {Object.keys(tablesData).map((tableName) => (\n              <MenuItem key={tableName} value={tableName}>\n                {tableName}\n              </MenuItem>\n            ))}\n          </Select>\n\n          <TextField\n            placeholder=\"Search Table\"\n            variant=\"outlined\"\n            onChange={(e) => setSearchText(e.target.value.toLowerCase())}\n            value={searchText}\n            style={{\n              width: 300,\n              backgroundColor: darkMode ? \"#333333\" : \"#ffffff\",\n            }}\n            InputProps={{\n              style: { color: darkMode ? \"#ffffff\" : \"#036649\" },\n            }}\n          />\n\n          <Tooltip title=\"Refresh Data\">\n            <IconButton onClick={fetchData} style={{ color: darkMode ? \"#bb86fc\" : \"#036649\" }}>\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n\n        {loading ? (\n          <CircularProgress style={{ display: \"block\", margin: \"20px auto\", color: darkMode ? \"#bb86fc\" : \"#036649\" }} />\n        ) : (\n          <TableContainer component={Paper} style={{ borderRadius: \"8px\", backgroundColor: darkMode ? \"#333333\" : \"#ffffff\" }}>\n            <Table>\n              <TableHead>\n                <TableRow style={{ backgroundColor: darkMode ? \"#333333\" : \"#036649\" }}>\n                  {tablesData[selectedTable]?.columns.map((col) => (\n                    <TableCell key={col.key} style={{ color: darkMode ? \"#ffffff\" : \"#ffffff\", fontWeight: \"bold\" }}>\n                      {col.title}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {filteredData.length > 0 ? (\n                  filteredData.map((row, rowIndex) => (\n                    <TableRow\n                      key={rowIndex}\n                      style={{\n                        backgroundColor:\n                          row.backup_status === \"Fail\" ? (darkMode ? \"#432d2d\" : \"#fdecea\") : (darkMode ? \"#2d4d32\" : \"#e7f5e6\"),\n                        cursor: \"pointer\",\n                      }}\n                      onClick={() => setSelectedRow(row)}\n                    >\n                      {tablesData[selectedTable]?.columns.map((col) => (\n                        <TableCell key={col.key}>\n                          {col.key === \"backup_status\" ? (\n                            <Chip\n                              label={row[col.key]}\n                              color={row[col.key] === \"Fail\" ? \"error\" : \"success\"}\n                              style={{ fontWeight: \"bold\", color: \"#ffffff\" }}\n                            />\n                          ) : (\n                            row[col.key]\n                          )}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  ))\n                ) : (\n                  <TableRow>\n                    <TableCell colSpan={tablesData[selectedTable]?.columns.length || 1} align=\"center\">\n                      <Alert severity=\"info\">No matching data found</Alert>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n\n        {/* Snackbar for data refresh notification */}\n        <Snackbar\n          open={openSnackbar}\n          autoHideDuration={3000}\n          onClose={handleCloseSnackbar}\n          message=\"Data refreshed successfully\"\n          action={\n            <IconButton size=\"small\" color=\"inherit\" onClick={handleCloseSnackbar}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          }\n        />\n\n        {/* Snackbar for critical and significant change alerts */}\n        <Snackbar\n          open={openAlertSnackbar}\n          autoHideDuration={6000}\n          onClose={handleCloseAlertSnackbar}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        >\n          <Alert onClose={handleCloseAlertSnackbar} severity=\"warning\" variant=\"filled\">\n            {alertMessage}\n          </Alert>\n        </Snackbar>\n\n        <Dialog open={openDetails} onClose={() => setOpenDetails(false)}>\n          <DialogTitle>Row Details</DialogTitle>\n          <DialogContent dividers>\n            {selectedRow &&\n              Object.entries(selectedRow).map(([key, value]) => (\n                <Typography key={key}>\n                  <strong>{key.replace(/_/g, \" \")}:</strong> {value}\n                </Typography>\n              ))}\n          </DialogContent>\n          <Button onClick={() => setOpenDetails(false)} color=\"primary\">\n            Close\n          </Button>\n        </Dialog>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}