{"ast":null,"code":"var _jsxFileName = \"/home/bipul/dashboard-dave/dynamodb-display/src/App.js\",\n  _s = $RefreshSig$();\nimport { message, Skeleton, Table, Select, Typography, Input } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport '../src/App.css'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst {\n  Search\n} = Input;\nconst App = () => {\n  _s();\n  const [tablesData, setTablesData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://o2merk3yse.execute-api.us-east-1.amazonaws.com/dev/data\").then(res => res.json()).then(data => {\n      setLoading(false);\n      const groupedData = groupAndGenerateColumns(data);\n      setTablesData(groupedData);\n    }).catch(err => {\n      setLoading(false);\n      message.error(\"Couldn't fetch data\");\n    });\n  }, []);\n  const groupAndGenerateColumns = data => {\n    const groups = data.reduce((acc, item) => {\n      const tableName = item.table_name;\n      if (!acc[tableName]) {\n        acc[tableName] = {\n          data: [],\n          keys: new Set()\n        };\n      }\n      acc[tableName].data.push(item);\n      Object.keys(item).forEach(key => {\n        if (key !== 'table_name') acc[tableName].keys.add(key);\n      });\n      return acc;\n    }, {});\n    Object.keys(groups).forEach(tableName => {\n      groups[tableName].columns = Array.from(groups[tableName].keys).map(key => ({\n        title: key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n        dataIndex: key,\n        key: key,\n        render: (text, record) => {\n          if (key === \"backup_status\") {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: text === \"Fail\" ? 'red' : 'green'\n              },\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 20\n            }, this);\n          }\n          return text;\n        }\n      }));\n    });\n    return groups;\n  };\n  const handleTableChange = value => {\n    setSelectedTable(value);\n    setSearchText(\"\"); // Reset search text when changing tables\n  };\n  const handleSearch = e => {\n    setSearchText(e.target.value.toLowerCase());\n  };\n  const filteredData = selectedTable && tablesData[selectedTable] ? tablesData[selectedTable].data.filter(item => Object.values(item).some(val => val && val.toString().toLowerCase().includes(searchText))) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      backgroundColor: '#f5f5f5'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 3,\n      style: {\n        textAlign: 'center',\n        backgroundColor: '#004D40',\n        color: '#fff',\n        height: 50,\n        display: 'flex',\n        alignItems: 'center',\n        padding: 10,\n        fontSize: 20,\n        fontWeight: '600',\n        justifyContent: 'center',\n        borderRadius: '8px'\n      },\n      children: \"Dave - Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        value: selectedTable,\n        style: {\n          width: 200\n        },\n        onChange: handleTableChange,\n        placeholder: \"Select Module\",\n        className: \"custom-select\",\n        children: Object.keys(tablesData).map(tableName => /*#__PURE__*/_jsxDEV(Option, {\n          value: tableName,\n          children: tableName\n        }, tableName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        placeholder: \"Search Table\",\n        onChange: handleSearch,\n        value: searchText,\n        style: {\n          width: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 18\n    }, this) : selectedTable && tablesData[selectedTable] ? /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: filteredData,\n      columns: tablesData[selectedTable].columns,\n      rowClassName: record => record.backup_status === \"Fail\" ? 'backup-fail' : 'backup-success',\n      pagination: {\n        pageSize: 10\n      },\n      bordered: true,\n      style: {\n        backgroundColor: '#fff',\n        borderRadius: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Typography.Text, {\n      children: \"No Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lqap6ESJh9x7qjyoK4vtWkfUh9Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["message","Skeleton","Table","Select","Typography","Input","useEffect","useState","jsxDEV","_jsxDEV","Option","Search","App","_s","tablesData","setTablesData","loading","setLoading","selectedTable","setSelectedTable","searchText","setSearchText","fetch","then","res","json","data","groupedData","groupAndGenerateColumns","catch","err","error","groups","reduce","acc","item","tableName","table_name","keys","Set","push","Object","forEach","key","add","columns","Array","from","map","title","replace","l","toUpperCase","dataIndex","render","text","record","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","handleTableChange","value","handleSearch","e","target","toLowerCase","filteredData","filter","values","some","val","toString","includes","padding","backgroundColor","Title","level","textAlign","height","display","alignItems","fontSize","fontWeight","justifyContent","borderRadius","marginBottom","width","onChange","placeholder","className","dataSource","rowClassName","backup_status","pagination","pageSize","bordered","Text","_c","$RefreshReg$"],"sources":["/home/bipul/dashboard-dave/dynamodb-display/src/App.js"],"sourcesContent":["import { message, Skeleton, Table, Select, Typography, Input } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport '../src/App.css'; // Ensure this path is correct\n\nconst { Option } = Select;\nconst { Search } = Input;\n\nconst App = () => {\n  const [tablesData, setTablesData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://o2merk3yse.execute-api.us-east-1.amazonaws.com/dev/data\")\n      .then(res => res.json())\n      .then(data => {\n        setLoading(false);\n        const groupedData = groupAndGenerateColumns(data);\n        setTablesData(groupedData);\n      })\n      .catch(err => {\n        setLoading(false);\n        message.error(\"Couldn't fetch data\");\n      });\n  }, []);\n\n  const groupAndGenerateColumns = (data) => {\n    const groups = data.reduce((acc, item) => {\n      const tableName = item.table_name;\n      if (!acc[tableName]) {\n        acc[tableName] = { data: [], keys: new Set() };\n      }\n      acc[tableName].data.push(item);\n      Object.keys(item).forEach(key => {\n        if (key !== 'table_name') acc[tableName].keys.add(key);\n      });\n      return acc;\n    }, {});\n\n    Object.keys(groups).forEach(tableName => {\n      groups[tableName].columns = Array.from(groups[tableName].keys).map(key => ({\n        title: key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n        dataIndex: key,\n        key: key,\n        render: (text, record) => {\n          if (key === \"backup_status\") {\n            return <span style={{ color: text === \"Fail\" ? 'red' : 'green' }}>{text}</span>;\n          }\n          return text;\n        }\n      }));\n    });\n\n    return groups;\n  };\n\n  const handleTableChange = value => {\n    setSelectedTable(value);\n    setSearchText(\"\"); // Reset search text when changing tables\n  };\n\n  const handleSearch = (e) => {\n    setSearchText(e.target.value.toLowerCase());\n  };\n\n  const filteredData = selectedTable && tablesData[selectedTable]\n    ? tablesData[selectedTable].data.filter(item =>\n        Object.values(item).some(val => val && val.toString().toLowerCase().includes(searchText))\n      )\n    : [];\n\n  return (\n    <div style={{ padding: 20, backgroundColor: '#f5f5f5' }}>\n      <Typography.Title level={3} style={{\n        textAlign: 'center',\n        backgroundColor: '#004D40',\n        color: '#fff',\n        height: 50,\n        display: 'flex',\n        alignItems: 'center',\n        padding: 10,\n        fontSize: 20,\n        fontWeight: '600',\n        justifyContent: 'center',\n        borderRadius: '8px'\n      }}>Dave - Dashboard</Typography.Title>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 20 }}>\n        <Select\n          value={selectedTable}\n          style={{ width: 200 }}\n          onChange={handleTableChange}\n          placeholder=\"Select Module\"\n          className=\"custom-select\"\n        >\n          {Object.keys(tablesData).map(tableName => (\n            <Option key={tableName} value={tableName}>{tableName}</Option>\n          ))}\n        </Select>\n        <Search\n          placeholder=\"Search Table\"\n          onChange={handleSearch}\n          value={searchText}\n          style={{ width: 300 }}\n        />\n      </div>\n\n      {loading ? <Skeleton /> : (\n        selectedTable && tablesData[selectedTable] ? (\n          <Table \n            dataSource={filteredData} \n            columns={tablesData[selectedTable].columns} \n            rowClassName={(record) => record.backup_status === \"Fail\" ? 'backup-fail' : 'backup-success'}\n            pagination={{ pageSize: 10 }}\n            bordered\n            style={{ backgroundColor: '#fff', borderRadius: '8px' }}\n          />\n        ) : <Typography.Text>No Data</Typography.Text>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}